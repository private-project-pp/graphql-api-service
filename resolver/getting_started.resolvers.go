package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/private-project-pp/graphql-api-service/interfaces/graph_server"
	"github.com/private-project-pp/graphql-api-service/model/graph_model"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input graph_model.NewTodo) (*graph_model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) (out []*graph_model.Todo, err error) {
	out = append(out, &graph_model.Todo{
		ID:     "1",
		Text:   "Ini teks",
		Status: "SUCCESS",
	})
	return out, nil
}

// Mutation returns graph_server.MutationResolver implementation.
func (r *Resolver) Mutation() graph_server.MutationResolver { return &mutationResolver{r} }

// Query returns graph_server.QueryResolver implementation.
func (r *Resolver) Query() graph_server.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
